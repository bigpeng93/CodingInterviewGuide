package BinaryTree.PrintEdge;

import BinaryTree.Node.Node;

/**
 * 打印二叉树的边界节点
 *
 * 给定一个二叉树的头节点head，按照如下两种标准分别实现二叉树边界节点的逆时针打印。
 * 标准一：
 *  1、头节点为边界节点。
 *  2、叶节点为边界节点。
 *  3、如果节点在其所在的层中是最左或最右的，那么也是边界节点。
 * 标准二：
 *  1、头节点为边界节点。
 *  2、叶节点为边界节点。
 *  3、树左边界延伸下去的路径为边界节点。
 *  4、树右边界延伸下去的路径为边界节点。
 *
 *  例如：
 *                         1
 *                    /         \
 *               2                   3
 *                \                 / \
 *                 4               5   6
 *                / \             / \
 *               7   8           9  10
 *                    \         /
 *                     11     12
 *                    /  \   /  \
 *                   13  14 15  16
 *  按标准一的打印结果为：1,2,4,7,11,13,14,15,16,12,10,6,3;
 *  按标准二的打印结果为：1,2,4,7,13,14,15,16,10,6,3;
 *
 */
public class Solution {
    //标准一
    public void printEdgeOne(Node head){

    }
    //标准二
    public void printEdgeTwo(Node head){

    }
}
